{"version":3,"sources":["components/first-actor.js","components/second-actor.js","components/CommonMovie.js","App.js","serviceWorker.js","index.js"],"names":["ActorSelect","styled","div","_templateObject","FirstActor","state","actorsList","value","selectedActor","noActor","onEnter","_callee","e","regenerator_default","a","wrap","_context","prev","next","preventDefault","_this","axios","get","concat","then","respnse","setState","data","results","stop","selectActor","_callee2","element","_context2","target","getAttribute","JSON","parse","props","setActor","_this2","this","_this$state","react_default","createElement","gestalt_es","color","shape","padding","display","direction","alignItems","flex","paddingX","onSubmit","accessibilityLabel","id","onChange","_ref3","placeholder","map","actor","profile_path","key","stringify","onClick","src","alt","name","React","Component","second_actor_templateObject","SecondActor","second_actor_ActorSelect","CardExample","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","movie","hovered","handleMouseEnter","_handleMouseEnter","bind","assertThisInitialized","handleMouseLeave","_handleMouseLeave","response","console","log","maxWidth","column","image","poster_path","onMouseEnter","onMouseLeave","align","bold","size","href","paddingY","original_title","text","CommonMovies","sameMovies","loadingMovies","react_loader_spinner_default","type","height","width","startMatching","CommonMovie_CardExample","App","firstActor","secondActor","firstActorMovies","secondActorMovies","_callee3","which","_context3","_ref2","asyncToGenerator","mark","i","total_pages","_x3","apply","arguments","_x4","error","_callee5","_context6","length","delegateYield","_callee4","actorToIterate","actorToLookFor","_loop","_context5","movieId","_context4","y","cast","includes","t0","className","first_actor_FirstActor","CommonMovie_CommonMovies","second_actor_SecondActor","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36a0b797.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport {Box,SearchField,IconButton,SelectList} from 'gestalt'\r\nimport styled from 'styled-components'\r\n\r\nconst ActorSelect = styled.div`\r\n    :hover{\r\n        background-color:#eee;\r\n    }\r\n    height:100px;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n`\r\n\r\nexport default class FirstActor extends React.Component {\r\n\r\n    state={\r\n        actorsList:[],\r\n        value:'',\r\n        selectedActor:{},\r\n        noActor:true\r\n    }\r\n\r\n\r\n\r\n\r\n    onEnter = async (e)=>{\r\n        e.preventDefault()\r\n        if(this.state.value){\r\n            await axios.get(`https://api.themoviedb.org/3/search/person?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&query=${this.state.value}&page=1&include_adult=false`)\r\n                .then((respnse)=>{\r\n                    this.setState({\r\n                        actorsList:respnse.data.results,\r\n                        noActor:false\r\n                    })\r\n\r\n                })\r\n        } else {\r\n            this.setState({actorsList:[],noActor:true})\r\n        }\r\n    }\r\n    selectActor = async (e)=>{\r\n        const element = e.target\r\n        const value = element.getAttribute('value')\r\n        this.setState({\r\n            value:'',\r\n            actorsList:[],\r\n        selectedActor:JSON.parse(value)})\r\n        this.props.setActor(JSON.parse(value),'first')\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {actorsList,selectedActor,value} = this.state\r\n        return (\r\n            <Box color=\"white\" shape=\"rounded\" padding={3} display=\"flex\" direction=\"row\" alignItems=\"center\">\r\n                <Box flex=\"grow\" paddingX={2}>\r\n                    <form onSubmit={(e)=>this.onEnter(e)}>\r\n                        <SearchField\r\n                            accessibilityLabel=\"Demo Search Field\"\r\n                            id=\"searchField\"\r\n                            onChange={({ value }) => this.setState({ value })}\r\n                            placeholder=\"Search and explore\"\r\n                            value={value}\r\n\r\n                        />\r\n                    </form>\r\n\r\n                    {actorsList.map(actor=>{\r\n                        if(actor.profile_path){\r\n                            return(\r\n                                <ActorSelect key={actor.id} value={JSON.stringify(actor,null,2)} onClick={(e)=>this.selectActor(e)}>\r\n                                    <img src={`https://image.tmdb.org/t/p/h100${actor.profile_path}`} alt=\"\"/>\r\n                                    <p>{actor.name}</p>\r\n                                </ActorSelect>\r\n                            )\r\n                        }\r\n                    })}\r\n                    {this.state.noActor && (\r\n                        <div>No actor found</div>\r\n                    )}\r\n                    {selectedActor && (\r\n                        <ActorSelect key={selectedActor.id} value={JSON.stringify(selectedActor,null,2)} onClick={(e)=>this.selectActor(e)}>\r\n                            <img src={`https://image.tmdb.org/t/p/h100${selectedActor.profile_path}`} alt=\"\"/>\r\n                            <p>{selectedActor.name}</p>\r\n                        </ActorSelect>\r\n                    )}\r\n\r\n                </Box>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Box,SearchField,IconButton,SelectList} from 'gestalt'\r\nimport styled from 'styled-components'\r\n\r\nconst ActorSelect = styled.div`\r\n    :hover{\r\n        background-color:#eee;\r\n    }\r\n    height:100px;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n`\r\n\r\nexport default class SecondActor extends React.Component {\r\n\r\n    state={\r\n        actorsList:[],\r\n        value:'',\r\n        selectedActor:{},\r\n        noActor:true\r\n    }\r\n\r\n\r\n\r\n\r\n    onEnter = async (e)=>{\r\n        e.preventDefault()\r\n        if(this.state.value){\r\n            await axios.get(`https://api.themoviedb.org/3/search/person?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&query=${this.state.value}&page=1&include_adult=false`)\r\n                .then((respnse)=>{\r\n                    this.setState({\r\n                        actorsList:respnse.data.results,\r\n                        noActor:false\r\n                    })\r\n\r\n                })\r\n        } else {\r\n            this.setState({actorsList:[],noActor:true})\r\n        }\r\n    }\r\n    selectActor = async (e)=>{\r\n        const element = e.target\r\n        const value = element.getAttribute('value')\r\n        this.setState({\r\n            value:'',\r\n            actorsList:[],\r\n            selectedActor:JSON.parse(value)})\r\n        this.props.setActor(JSON.parse(value),'second')\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {actorsList,selectedActor,value} = this.state\r\n        return (\r\n            <Box color=\"white\" shape=\"rounded\" padding={3} display=\"flex\" direction=\"row\" alignItems=\"center\">\r\n                <Box flex=\"grow\" paddingX={2}>\r\n                    <form onSubmit={(e)=>this.onEnter(e)}>\r\n                        <SearchField\r\n                            accessibilityLabel=\"Demo Search Field\"\r\n                            id=\"searchField\"\r\n                            onChange={({ value }) => this.setState({ value })}\r\n                            placeholder=\"Search and explore\"\r\n                            value={value}\r\n\r\n                        />\r\n                    </form>\r\n\r\n                    {actorsList.map(actor=>{\r\n                        if(actor.profile_path){\r\n                            return(\r\n                                <ActorSelect key={actor.id} value={JSON.stringify(actor,null,2)} onClick={(e)=>this.selectActor(e)}>\r\n                                    <img src={`https://image.tmdb.org/t/p/h100${actor.profile_path}`} alt=\"\"/>\r\n                                    <p>{actor.name}</p>\r\n                                </ActorSelect>\r\n                            )\r\n                        }\r\n                    })}\r\n                    {this.state.noActor && (\r\n                        <div>No actor found</div>\r\n                    )}\r\n                    {selectedActor && (\r\n                        <ActorSelect key={selectedActor.id} value={JSON.stringify(selectedActor,null,2)} onClick={(e)=>this.selectActor(e)}>\r\n                            <img src={`https://image.tmdb.org/t/p/h100${selectedActor.profile_path}`} alt=\"\"/>\r\n                            <p>{selectedActor.name}</p>\r\n                        </ActorSelect>\r\n                    )}\r\n\r\n                </Box>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Loader from 'react-loader-spinner'\r\nimport {Card,Box,Avatar,Text,Link,Button} from 'gestalt'\r\nimport axios from 'axios'\r\n\r\nclass CardExample extends React.Component {\r\n    state={\r\n        movie:{}\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hovered: false };\r\n        this.handleMouseEnter = this._handleMouseEnter.bind(this);\r\n        this.handleMouseLeave = this._handleMouseLeave.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await axios.get(`https://api.themoviedb.org/3/movie/${this.props.movie}?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US`)\r\n            .then(response=>{\r\n                console.log(response)\r\n                this.setState({\r\n                    movie:response.data\r\n                })\r\n            })\r\n    }\r\n    _handleMouseEnter() {\r\n        this.setState(() => ({ hovered: true }));\r\n    }\r\n    _handleMouseLeave() {\r\n        this.setState(() => ({ hovered: false }));\r\n    }\r\n    render() {\r\n        console.log(this.state.movie)\r\n\r\n        if(this.state.movie){\r\n            return (\r\n                <Box maxWidth={236} padding={2} column={12}>\r\n                    <Card\r\n                        image={\r\n                            <Avatar\r\n                                name=\"James Jones\"\r\n                                src={`https://image.tmdb.org/t/p/w500${this.state.movie.poster_path}`}\r\n                            />\r\n                        }\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}>\r\n                        <Text align=\"center\" bold size=\"xl\">\r\n                            <Link href=\"https://pinterest.com\">\r\n                                <Box paddingX={3} paddingY={2}>\r\n                                    {this.state.movie.original_title}\r\n                                </Box>\r\n                            </Link>\r\n                        </Text>\r\n                        <Button\r\n                            accessibilityLabel=\"Follow James Jones\"\r\n                            color=\"red\"\r\n                            text=\"Look on tmdb\"\r\n                        />\r\n                    </Card>\r\n                </Box>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div>None</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default class CommonMovies extends React.Component{\r\n\r\n\r\n\r\n    render(){\r\n        console.log(this.props.sameMovies)\r\n        return(\r\n            <div>\r\n                <h1>No common Movie</h1>\r\n                {this.props.loadingMovies && (\r\n                    <Loader\r\n                        type=\"Puff\"\r\n                        color=\"#00BFFF\"\r\n                        height=\"100\"\r\n                        width=\"100\"\r\n                    />\r\n                )}\r\n                <button onClick={this.props.startMatching}>Start Matching</button>\r\n                {this.props.sameMovies.map(movie=>(\r\n                    <CardExample movie={movie}> </CardExample>\r\n                ))}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport FirstActor from './components/first-actor'\nimport SecondActor from './components/second-actor'\nimport CommonMovies from './components/CommonMovie'\nimport 'gestalt/dist/gestalt.css'\nimport axios from 'axios'\n\n\nclass App extends React.Component {\n\n    state={\n        firstActor:{},\n        secondActor:{},\n        loadingMovies:false,\n        firstActorMovies:[],\n        secondActorMovies:[],\n        sameMovies:[]\n    }\n\n\n    setActor=async (actor,which)=>{\n        if(which=='first'){\n            this.setState({\n                firstActor:actor\n            })\n            if(actor.id){\n                console.log(actor.id)\n                this.setState({loadingMovies:true})\n                await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_cast=${actor.id}`)\n                    .then(async response=>{\n                        console.log(response)\n                        for(let i=1;i<=response.data.total_pages;i++){\n                            console.log(`page ${i}`)\n                            await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${i}&with_cast=${actor.id}`)\n                                .then(response=>{\n                                   // this.setState({\n                                   //     firstActorMovies:this.state.firstActorMovies.push(response.data.results)\n                                   // })\n                                    this.setState({\n                                        firstActorMovies:this.state.firstActorMovies.concat(response.data.results)\n                                    })\n                                    console.log(response.data.results)\n                                })\n                        }\n                    })\n            }\n        } else if (which=='second'){\n            this.setState({\n                secondActor:actor\n            })\n            if(actor.id){\n                console.log(actor.id)\n                this.setState({loadingMovies:true})\n                await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_cast=${actor.id}`)\n                    .then(async response=>{\n                        console.log(response)\n                        for(let i=1;i<=response.data.total_pages;i++){\n                            console.log(`page ${i}`)\n                            await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${i}&with_cast=${actor.id}`)\n                                .then(response=>{\n                                    // this.setState({\n                                    //     firstActorMovies:this.state.firstActorMovies.push(response.data.results)\n                                    // })\n                                    this.setState({\n                                        secondActorMovies:this.state.secondActorMovies.concat(response.data.results)\n                                    })\n                                    console.log(response.data.results)\n                                })\n                        }\n                    })\n            }else {\n                console.error('no id')\n            }\n        }\n\n    }\n    startMatching= async()=>{\n        if(this.state.firstActorMovies.length>1 && this.state.secondActorMovies.length>1){\n            console.log(`start lopping over ${this.state.firstActorMovies.length}`)\n            let actorToIterate = {}\n            let actorToLookFor = {}\n            if(this.state.firstActorMovies.length>this.state.secondActorMovies.length){\n                actorToIterate = this.state.secondActorMovies\n                actorToLookFor = this.state.firstActor\n            } else{\n                actorToIterate = this.state.firstActorMovies\n                actorToLookFor = this.state.secondActor\n            }\n            for(let i=1;i<=actorToIterate.length;i++){\n                 try{\n\n                    let movieId = actorToIterate[i].id\n\n                     await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=d4c86d3d23078bb5e3ea14ae379a2726`)\n                        .then(response=>{\n                            for(let y=0;y<=response.data.cast.length;y++){\n                                if(response.data.cast[y].name.includes(actorToLookFor.name)){\n                                    console.log(response.data.cast[y])\n                                    console.log(i)\n                                    console.log(movieId)\n                                    console.log(this.state.sameMovies)\n\n                                    this.setState({\n                                        sameMovies:this.state.sameMovies.concat(movieId)\n                                    })\n\n                                }\n                            }\n                        })\n\n\n                } catch (e) {\n\n                    }\n            }\n        }\n    }\n  render(){\n\n      return (\n          <div className=\"App\">\n\n              <div>\n                  <h1>Select your first actor</h1>\n                  <FirstActor setActor={this.setActor}/>\n              </div>\n              <CommonMovies\n                  sameMovies={this.state.sameMovies}\n                  startMatching={this.startMatching}\n                            loadingMovies={this.state.loadingMovies}/>\n              <div>\n                  <h1>Select your second Actor</h1>\n                  <SecondActor setActor={this.setActor}/>\n              </div>\n          </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}