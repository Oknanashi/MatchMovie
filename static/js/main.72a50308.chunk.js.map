{"version":3,"sources":["components/first-actor.js","components/second-actor.js","components/CommonMovie.js","App.js","serviceWorker.js","index.js"],"names":["ActorSelect","styled","div","_templateObject","FirstActor","state","actorsList","value","selectedActor","noActor","onEnter","_callee","e","regenerator_default","a","wrap","_context","prev","next","preventDefault","_this","axios","get","concat","then","respnse","setState","data","results","stop","selectActor","_callee2","element","_context2","target","getAttribute","JSON","parse","props","setActor","_this2","this","_this$state","react_default","createElement","gestalt_es","color","shape","padding","display","direction","alignItems","flex","paddingX","onSubmit","accessibilityLabel","id","onChange","_ref3","placeholder","map","actor","profile_path","key","stringify","onClick","src","alt","name","React","Component","second_actor_templateObject","SecondActor","second_actor_ActorSelect","CardExample","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","movie","isMovie","hovered","handleMouseEnter","_handleMouseEnter","bind","assertThisInitialized","handleMouseLeave","_handleMouseLeave","response","console","log","maxWidth","column","image","poster_path","onMouseEnter","onMouseLeave","align","bold","size","href","paddingY","original_title","text","CommonMovies","sameMovies","loadingMovies","react_loader_spinner_default","type","height","width","startMatching","CommonMovie_CardExample","length","App","firstActor","secondActor","firstActorMovies","secondActorMovies","_callee3","which","_context3","_ref2","asyncToGenerator","mark","i","total_pages","_x3","apply","arguments","cast","_x4","error","_callee6","_context6","delegateYield","_callee5","actorToIterate","actorToLookFor","_context5","_callee4","movieId","_context4","original_name","y","includes","t1","className","first_actor_FirstActor","CommonMovie_CommonMovies","second_actor_SecondActor","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72a50308.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\nimport {Box,SearchField,IconButton,SelectList} from 'gestalt'\r\nimport styled from 'styled-components'\r\n\r\nconst ActorSelect = styled.div`\r\n    :hover{\r\n        background-color:#eee;\r\n    }\r\n    height:100px;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n`\r\n\r\nexport default class FirstActor extends React.Component {\r\n\r\n    state={\r\n        actorsList:[],\r\n        value:'',\r\n        selectedActor:{},\r\n        noActor:true\r\n    }\r\n\r\n\r\n\r\n\r\n    onEnter = async (e)=>{\r\n        e.preventDefault()\r\n        if(this.state.value){\r\n            await axios.get(`https://api.themoviedb.org/3/search/person?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&query=${this.state.value}&page=1&include_adult=false`)\r\n                .then((respnse)=>{\r\n                    this.setState({\r\n                        actorsList:respnse.data.results,\r\n                        noActor:false\r\n                    })\r\n\r\n                })\r\n        } else {\r\n            this.setState({actorsList:[],noActor:true})\r\n        }\r\n    }\r\n    selectActor = async (e)=>{\r\n        const element = e.target\r\n        const value = element.getAttribute('value')\r\n        this.setState({\r\n            value:'',\r\n            actorsList:[],\r\n        selectedActor:JSON.parse(value)})\r\n        this.props.setActor(JSON.parse(value),'first')\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {actorsList,selectedActor,value} = this.state\r\n        return (\r\n            <Box color=\"white\" shape=\"rounded\" padding={3} display=\"flex\" direction=\"row\" alignItems=\"center\">\r\n                <Box flex=\"grow\" paddingX={2}>\r\n                    <form onSubmit={(e)=>this.onEnter(e)}>\r\n                        <SearchField\r\n                            accessibilityLabel=\"Demo Search Field\"\r\n                            id=\"searchField\"\r\n                            onChange={({ value }) => this.setState({ value })}\r\n                            placeholder=\"Search and explore\"\r\n                            value={value}\r\n\r\n                        />\r\n                    </form>\r\n\r\n                    {actorsList.map(actor=>{\r\n                        if(actor.profile_path){\r\n                            return(\r\n                                <ActorSelect key={actor.id} value={JSON.stringify(actor,null,2)} onClick={(e)=>this.selectActor(e)}>\r\n                                    <img value={JSON.stringify(actor,null,2)} src={`https://image.tmdb.org/t/p/h100${actor.profile_path}`} alt=\"\"/>\r\n                                    <p value={JSON.stringify(actor,null,2)}>{actor.name}</p>\r\n                                </ActorSelect>\r\n                            )\r\n                        }\r\n                    })}\r\n                    {this.state.noActor && (\r\n                        <div>No actor found</div>\r\n                    )}\r\n                    {selectedActor && (\r\n                        <ActorSelect key={selectedActor.id} value={JSON.stringify(selectedActor,null,2)} onClick={(e)=>this.selectActor(e)}>\r\n                            <img src={`https://image.tmdb.org/t/p/h100${selectedActor.profile_path}`} alt=\"\"/>\r\n                            <p>{selectedActor.name}</p>\r\n                        </ActorSelect>\r\n                    )}\r\n\r\n                </Box>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Box,SearchField,IconButton,SelectList} from 'gestalt'\r\nimport styled from 'styled-components'\r\n\r\nconst ActorSelect = styled.div`\r\n    :hover{\r\n        background-color:#eee;\r\n    }\r\n    height:100px;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n`\r\n\r\nexport default class SecondActor extends React.Component {\r\n\r\n    state={\r\n        actorsList:[],\r\n        value:'',\r\n        selectedActor:{},\r\n        noActor:true\r\n    }\r\n\r\n\r\n\r\n\r\n    onEnter = async (e)=>{\r\n        e.preventDefault()\r\n        if(this.state.value){\r\n            await axios.get(`https://api.themoviedb.org/3/search/person?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&query=${this.state.value}&page=1&include_adult=false`)\r\n                .then((respnse)=>{\r\n                    this.setState({\r\n                        actorsList:respnse.data.results,\r\n                        noActor:false\r\n                    })\r\n\r\n                })\r\n        } else {\r\n            this.setState({actorsList:[],noActor:true})\r\n        }\r\n    }\r\n    selectActor = async (e)=>{\r\n        const element = e.target\r\n        const value = element.getAttribute('value')\r\n        this.setState({\r\n            value:'',\r\n            actorsList:[],\r\n            selectedActor:JSON.parse(value)})\r\n        this.props.setActor(JSON.parse(value),'second')\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {actorsList,selectedActor,value} = this.state\r\n        return (\r\n            <Box color=\"white\" shape=\"rounded\" padding={3} display=\"flex\" direction=\"row\" alignItems=\"center\">\r\n                <Box flex=\"grow\" paddingX={2}>\r\n                    <form onSubmit={(e)=>this.onEnter(e)}>\r\n                        <SearchField\r\n                            accessibilityLabel=\"Demo Search Field\"\r\n                            id=\"searchField\"\r\n                            onChange={({ value }) => this.setState({ value })}\r\n                            placeholder=\"Search and explore\"\r\n                            value={value}\r\n\r\n                        />\r\n                    </form>\r\n\r\n                    {actorsList.map(actor=>{\r\n                        if(actor.profile_path){\r\n                            return(\r\n                                <ActorSelect key={actor.id} value={JSON.stringify(actor,null,2)} onClick={(e)=>this.selectActor(e)}>\r\n                                    <img value={JSON.stringify(actor,null,2)} src={`https://image.tmdb.org/t/p/h100${actor.profile_path}`} alt=\"\"/>\r\n                                    <p value={JSON.stringify(actor,null,2)}>{actor.name}</p>\r\n                                </ActorSelect>\r\n                            )\r\n                        }\r\n                    })}\r\n                    {this.state.noActor && (\r\n                        <div>No actor found</div>\r\n                    )}\r\n                    {selectedActor && (\r\n                        <ActorSelect key={selectedActor.id} value={JSON.stringify(selectedActor,null,2)} onClick={(e)=>this.selectActor(e)}>\r\n                            <img src={`https://image.tmdb.org/t/p/h100${selectedActor.profile_path}`} alt=\"\"/>\r\n                            <p>{selectedActor.name}</p>\r\n                        </ActorSelect>\r\n                    )}\r\n\r\n                </Box>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Loader from 'react-loader-spinner'\r\nimport {Card,Box,Avatar,Text,Link,Button} from 'gestalt'\r\nimport axios from 'axios'\r\n\r\nclass CardExample extends React.Component {\r\n    state={\r\n        movie:{},\r\n        isMovie:true\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hovered: false };\r\n        this.handleMouseEnter = this._handleMouseEnter.bind(this);\r\n        this.handleMouseLeave = this._handleMouseLeave.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            await axios.get(`https://api.themoviedb.org/3/movie/${this.props.movie}?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US`)\r\n                .then(response=>{\r\n                    console.log(response)\r\n                    this.setState({\r\n                        movie:response.data,\r\n                        isMovie:true\r\n                    })\r\n                })\r\n        } catch (e) {\r\n            await axios.get(`https://api.themoviedb.org/3/tv/${this.props.movie}?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US`)\r\n                .then(response=>{\r\n                    console.log(response.data)\r\n                    this.setState({\r\n                        movie:response.data,\r\n                        isMovie:false\r\n                    })\r\n                })\r\n        }\r\n\r\n    }\r\n    _handleMouseEnter() {\r\n        this.setState(() => ({ hovered: true }));\r\n    }\r\n    _handleMouseLeave() {\r\n        this.setState(() => ({ hovered: false }));\r\n    }\r\n    render() {\r\n        // console.log(this.state.movie)\r\n\r\n        if(this.state.movie){\r\n            return (\r\n                <Box maxWidth={236} padding={2} column={12}>\r\n                    <Card\r\n                        image={\r\n                            <Avatar\r\n                                name=\"James Jones\"\r\n                                src={`https://image.tmdb.org/t/p/w500${this.state.movie.poster_path}`}\r\n                            />\r\n                        }\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}>\r\n                        <Text align=\"center\" bold size=\"xl\">\r\n                            <Link href=\"https://pinterest.com\">\r\n                                {this.state.isMovie ? (\r\n                                    <Box paddingX={3} paddingY={2}>\r\n                                        {this.state.movie.original_title}\r\n                                    </Box>\r\n                                ) :(\r\n                                    <Box paddingX={3} paddingY={2}>\r\n                                        {this.state.movie.name}\r\n                                    </Box>\r\n                                )}\r\n                            </Link>\r\n                        </Text>\r\n                        <Button\r\n                            accessibilityLabel=\"Follow James Jones\"\r\n                            color=\"red\"\r\n                            text=\"Look on tmdb\"\r\n                        />\r\n                    </Card>\r\n                </Box>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div>Loading...</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default class CommonMovies extends React.Component{\r\n\r\n\r\n\r\n    render(){\r\n        console.log(this.props.sameMovies)\r\n        return(\r\n            <div>\r\n\r\n                {this.props.loadingMovies && (\r\n                    <Loader\r\n                        type=\"Puff\"\r\n                        color=\"#00BFFF\"\r\n                        height=\"100\"\r\n                        width=\"100\"\r\n                    />\r\n                )}\r\n                <button onClick={this.props.startMatching}>Start Matching</button>\r\n                {this.props.sameMovies.map(movie=>(\r\n                    <CardExample key={movie} movie={movie}> </CardExample>\r\n                ))}\r\n                {this.props.sameMovies.length<1 && (\r\n                    <h1>\r\n                        No common Movies\r\n                    </h1>\r\n                )}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport FirstActor from './components/first-actor'\nimport SecondActor from './components/second-actor'\nimport CommonMovies from './components/CommonMovie'\nimport 'gestalt/dist/gestalt.css'\nimport axios from 'axios'\n\n\nclass App extends React.Component {\n\n    state={\n        firstActor:{},\n        secondActor:{},\n        loadingMovies:false,\n        firstActorMovies:[],\n        secondActorMovies:[],\n        sameMovies:[]\n    }\n\n\n    setActor=async (actor,which)=>{\n        if(which=='first'){\n            this.setState({\n                firstActor:actor\n            })\n            if(actor.id){\n                // console.log(actor.id)\n                this.setState({loadingMovies:true})\n                await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_cast=${actor.id}`)\n                    .then(async response=>{\n                        // console.log(response)\n                        for(let i=1;i<=response.data.total_pages;i++){\n                            console.log(`page ${i}`)\n                            await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${i}&with_cast=${actor.id}`)\n                                .then(response=>{\n                                   // this.setState({\n                                   //     firstActorMovies:this.state.firstActorMovies.push(response.data.results)\n                                   // })\n                                    this.setState({\n                                        firstActorMovies:this.state.firstActorMovies.concat(response.data.results)\n                                    })\n                                    console.log(response.data.results)\n                                })\n                        }\n                    })\n                await axios.get(`https://api.themoviedb.org/3/person/${actor.id}/tv_credits?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US`)\n                    .then(response=>{\n                        this.setState({\n                            firstActorMovies:this.state.firstActorMovies.concat(response.data.cast)\n                        })\n                    })\n            }\n        } else if (which=='second'){\n            this.setState({\n                secondActor:actor\n            })\n            if(actor.id){\n                console.log(actor.id)\n                this.setState({loadingMovies:true})\n                await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_cast=${actor.id}`)\n                    .then(async response=>{\n                        console.log(response)\n                        for(let i=1;i<=response.data.total_pages;i++){\n                            console.log(`page ${i}`)\n                            await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${i}&with_cast=${actor.id}`)\n                                .then(response=>{\n                                    // this.setState({\n                                    //     firstActorMovies:this.state.firstActorMovies.push(response.data.results)\n                                    // })\n                                    this.setState({\n                                        secondActorMovies:this.state.secondActorMovies.concat(response.data.results)\n                                    })\n\n                                })\n                        }\n                    })\n                await axios.get(`https://api.themoviedb.org/3/person/${actor.id}/tv_credits?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US`)\n                    .then(response=>{\n                        this.setState({\n                            secondActorMovies:this.state.secondActorMovies.concat(response.data.cast)\n                        })\n                    })\n\n            }else {\n                console.error('no id')\n            }\n        }\n\n    }\n    startMatching= async()=>{\n        this.setState({\n            sameMovies:[]\n        })\n        if(this.state.firstActorMovies.length>1 && this.state.secondActorMovies.length>1){\n            console.log(`start lopping over ${this.state.firstActorMovies.length}`)\n            let actorToIterate = {}\n            let actorToLookFor = {}\n            console.log(this.state.firstActorMovies)\n            console.log(this.state.secondActorMovies)\n            if(this.state.firstActorMovies.length>this.state.secondActorMovies.length){\n                actorToIterate = this.state.secondActorMovies\n                actorToLookFor = this.state.firstActor\n            } else{\n                actorToIterate = this.state.firstActorMovies\n                actorToLookFor = this.state.secondActor\n            }\n            for(let i=1;i<=actorToIterate.length;i++){\n                 try{\n\n                    let movieId = actorToIterate[i].id\n\n                     if(actorToIterate[i].original_name){\n                        //Looking for TV SHOW\n                        console.log(actorToIterate[i].original_name)\n                         await axios.get(`https://api.themoviedb.org/3/tv/${movieId}/season/1/credits?api_key=d4c86d3d23078bb5e3ea14ae379a2726&language=en-US`)\n                             .then(response=>{\n                                 console.log(response.data.cast)\n                                 console.log(actorToLookFor.name)\n                                 for(let y=0;y<=response.data.cast.length;y++){\n                                     if(response.data.cast[y].name.includes(actorToLookFor.name)){\n\n                                         // console.log(response.data.cast[y])\n                                         // console.log(i)\n                                         // console.log(movieId)\n                                         // console.log(this.state.sameMovies)\n\n                                         this.setState({\n                                             sameMovies:this.state.sameMovies.concat(movieId)\n                                         })\n\n                                     }\n                                 }\n                             })\n                     }else {\n                            //Looking for movie\n                         await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=d4c86d3d23078bb5e3ea14ae379a2726`)\n                             .then(response=>{\n                                 for(let y=0;y<=response.data.cast.length;y++){\n                                     if(response.data.cast[y].name.includes(actorToLookFor.name)){\n                                         // console.log(response.data.cast[y])\n                                         // console.log(i)\n                                         // console.log(movieId)\n                                         // console.log(this.state.sameMovies)\n\n                                         this.setState({\n                                             sameMovies:this.state.sameMovies.concat(movieId)\n                                         })\n\n                                     }\n                                 }\n                             })\n                     }\n\n\n                } catch (e) {\n\n                    }\n            }\n            this.setState({\n                loadingMovies:false\n            })\n        }\n    }\n  render(){\n        console.log(this.state.firstActorMovies)\n        console.log(this.state.secondActorMovies)\n      return (\n          <div className=\"App\">\n\n              <div>\n                  <h1>Select your first actor</h1>\n                  <FirstActor setActor={this.setActor}/>\n              </div>\n              <CommonMovies\n                  sameMovies={this.state.sameMovies}\n                  startMatching={this.startMatching}\n                            loadingMovies={this.state.loadingMovies}/>\n              <div>\n                  <h1>Select your second Actor</h1>\n                  <SecondActor setActor={this.setActor}/>\n              </div>\n          </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}